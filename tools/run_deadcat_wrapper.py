#!/usr/bin/env python3
"""Wrapper to run the deadcat backtest module safely and handle empty trades.
"""
import sys
import os
from importlib import import_module

# add external path where the script lives
script_dir = r'c:\cointistreact\public\assets\guidesgemin'
if script_dir not in sys.path:
    sys.path.insert(0, script_dir)

try:
    mod = import_module('binance_perps_deadcat_backtest')
except Exception as e:
    print('Failed to import module:', e)
    sys.exit(1)

from binance_perps_deadcat_backtest import Config, run_backtest, load_csv

# configure to use MYX CSVs we wrote earlier
cfg = Config(symbol='MYX/USDT', csv_15m='var/myx_15m.csv', csv_1d='var/myx_1d.csv')
# ensure csv_1d/15m strings are set
if not os.path.exists(cfg.csv_15m) or not os.path.exists(cfg.csv_1d):
    print('CSV files not found in var/')
    sys.exit(1)

try:
    df15 = load_csv(cfg.csv_15m)
    df1d = load_csv(cfg.csv_1d)
except Exception as e:
    print('Failed to load CSVs:', e)
    sys.exit(1)

eq_df, trades_df, summary = run_backtest(cfg, df15, df1d)

# handle empty trades_df
if trades_df is None or trades_df.empty:
    print('No trades were generated by the strategy. Summary:')
    print(summary)
    # still save empty files for consistency
    eq_df.to_csv('MYX_deadcat_equity.csv')
    # create empty trades file with expected columns
    import pandas as pd
    cols = ['side','entry_time','entry','size','sl','tp','exit_time','exit','pnl','r_multiple','reason']
    pd.DataFrame(columns=cols).to_csv('MYX_deadcat_trades.csv', index=False)
    sys.exit(0)

# otherwise save outputs like original script
base = cfg.symbol.replace('/','_')
trades_path = f"{base}_deadcat_trades.csv"
eq_path = f"{base}_deadcat_equity.csv"
trades_df.to_csv(trades_path, index=False)
eq_df.to_csv(eq_path)
print('Saved', trades_path, eq_path)
print('Summary:')
print(summary)
